{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "objectId": {
      "type": "string"
    },
    "applicationName": {
      "type": "string"
    },
    "location": {
      "type": "string"
    },
    "publisherEmail": {
      "type": "string",
      "defaultValue": "duhunter@microsoft.com"
    },
    "publisherName": {
      "type": "string",
      "defaultValue": "Duncan Hunter"
    },
    "cosmosDatabaseName": {
      "type": "string",
      "defaultValue": "BankingDatabase"
    }
  },
  "functions": [],
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "apiManagementDeploy",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "applicationName": {
            "value": "[parameters('applicationName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "publisherEmail": {
            "value": "[parameters('publisherEmail')]"
          },
          "publisherName": {
            "value": "[parameters('publisherName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "publisherEmail": {
              "type": "string"
            },
            "publisherName": {
              "type": "string"
            },
            "applicationName": {
              "type": "string"
            },
            "location": {
              "type": "string"
            }
          },
          "functions": [],
          "resources": [
            {
              "type": "Microsoft.ApiManagement/service",
              "apiVersion": "2019-12-01",
              "name": "[format('apim-{0}', parameters('applicationName'))]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Consumption",
                "capacity": 0
              },
              "properties": {
                "publisherEmail": "[parameters('publisherEmail')]",
                "publisherName": "[parameters('publisherName')]"
              },
              "identity": {
                "type": "SystemAssigned"
              }
            }
          ],
          "outputs": {
            "apimHostname": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.ApiManagement/service', format('apim-{0}', parameters('applicationName')))).hostnameConfigurations[0].hostName]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "frontDoorDeployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "applicationName": {
            "value": "[parameters('applicationName')]"
          },
          "apimHostname": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'apiManagementDeploy'), '2019-10-01').outputs.apimHostname.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "applicationName": {
              "type": "string"
            },
            "apimHostname": {
              "type": "string"
            }
          },
          "functions": [],
          "resources": [
            {
              "type": "Microsoft.Cdn/profiles",
              "apiVersion": "2020-09-01",
              "name": "[format('fd-{0}', parameters('applicationName'))]",
              "location": "Global",
              "sku": {
                "name": "Standard_AzureFrontDoor"
              },
              "kind": "frontdoor"
            },
            {
              "type": "Microsoft.Cdn/profiles/afdEndpoints",
              "apiVersion": "2020-09-01",
              "name": "[format('{0}/{1}', format('fd-{0}', parameters('applicationName')), parameters('applicationName'))]",
              "location": "Global",
              "dependsOn": [
                "[resourceId('Microsoft.Cdn/profiles', format('fd-{0}', parameters('applicationName')))]"
              ]
            },
            {
              "type": "Microsoft.Cdn/profiles/originGroups",
              "apiVersion": "2020-09-01",
              "name": "[format('{0}/default-origin-group', format('fd-{0}', parameters('applicationName')))]",
              "dependsOn": [
                "[resourceId('Microsoft.Cdn/profiles', format('fd-{0}', parameters('applicationName')))]"
              ]
            },
            {
              "type": "Microsoft.Cdn/profiles/originGroups/origins",
              "apiVersion": "2020-09-01",
              "name": "[format('{0}/default-origin', format('{0}/default-origin-group', format('fd-{0}', parameters('applicationName'))))]",
              "properties": {
                "hostName": "[parameters('apimHostname')]",
                "originHostHeader": "[parameters('apimHostname')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Cdn/profiles/originGroups', split(format('{0}/default-origin-group', format('fd-{0}', parameters('applicationName'))), '/')[0], split(format('{0}/default-origin-group', format('fd-{0}', parameters('applicationName'))), '/')[1])]"
              ]
            },
            {
              "type": "Microsoft.Cdn/profiles/afdEndpoints/routes",
              "apiVersion": "2020-09-01",
              "name": "[format('{0}/default-route', format('{0}/{1}', format('fd-{0}', parameters('applicationName')), parameters('applicationName')))]",
              "properties": {
                "originGroup": {
                  "id": "[resourceId('Microsoft.Cdn/profiles/originGroups', split(format('{0}/default-origin-group', format('fd-{0}', parameters('applicationName'))), '/')[0], split(format('{0}/default-origin-group', format('fd-{0}', parameters('applicationName'))), '/')[1])]"
                },
                "linkToDefaultDomain": "Enabled"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Cdn/profiles/originGroups', split(format('{0}/default-origin-group', format('fd-{0}', parameters('applicationName'))), '/')[0], split(format('{0}/default-origin-group', format('fd-{0}', parameters('applicationName'))), '/')[1])]",
                "[resourceId('Microsoft.Cdn/profiles/afdEndpoints', split(format('{0}/{1}', format('fd-{0}', parameters('applicationName')), parameters('applicationName')), '/')[0], split(format('{0}/{1}', format('fd-{0}', parameters('applicationName')), parameters('applicationName')), '/')[1])]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'apiManagementDeploy')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "cosmosDbDeployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "applicationName": {
            "value": "[parameters('applicationName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "cosmosDatabaseName": {
            "value": "[parameters('cosmosDatabaseName')]"
          },
          "keyVaultName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'keyVaultDeployment'), '2019-10-01').outputs.keyVaultName.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "applicationName": {
              "type": "string"
            },
            "cosmosDatabaseName": {
              "type": "string"
            },
            "keyVaultName": {
              "type": "string"
            },
            "location": {
              "type": "string"
            }
          },
          "functions": [],
          "resources": [
            {
              "type": "Microsoft.DocumentDB/databaseAccounts",
              "apiVersion": "2020-06-01-preview",
              "name": "[format('cosmos-{0}', parameters('applicationName'))]",
              "location": "[parameters('location')]",
              "kind": "GlobalDocumentDB",
              "properties": {
                "createMode": "Default",
                "consistencyPolicy": {
                  "defaultConsistencyLevel": "Session"
                },
                "locations": [
                  {
                    "locationName": "[parameters('location')]",
                    "failoverPriority": 0,
                    "isZoneRedundant": false
                  }
                ],
                "databaseAccountOfferType": "Standard"
              }
            },
            {
              "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
              "apiVersion": "2020-06-01-preview",
              "name": "[format('{0}/{1}', format('cosmos-{0}', parameters('applicationName')), parameters('cosmosDatabaseName'))]",
              "properties": {
                "resource": {
                  "id": "[parameters('cosmosDatabaseName')]"
                },
                "options": {
                  "throughput": 400
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', format('cosmos-{0}', parameters('applicationName')))]"
              ]
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2019-09-01",
              "name": "[format('{0}/CosmosDbKey', parameters('keyVaultName'))]",
              "properties": {
                "value": "[listKeys(resourceId('Microsoft.DocumentDB/databaseAccounts', format('cosmos-{0}', parameters('applicationName'))), '2020-06-01-preview').primaryMasterKey]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.DocumentDB/databaseAccounts', format('cosmos-{0}', parameters('applicationName')))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'keyVaultDeployment')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "storageAccountDeployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "applicationName": {
            "value": "[parameters('applicationName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "keyVaultName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'keyVaultDeployment'), '2019-10-01').outputs.keyVaultName.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "applicationName": {
              "type": "string"
            },
            "keyVaultName": {
              "type": "string"
            },
            "location": {
              "type": "string"
            }
          },
          "functions": [],
          "variables": {
            "storageAccountName": "[format('stg{0}', replace(parameters('applicationName'), '-', ''))]"
          },
          "resources": [
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2019-06-01",
              "name": "[variables('storageAccountName')]",
              "location": "[parameters('location')]",
              "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
              },
              "kind": "StorageV2",
              "properties": {
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                  "services": {
                    "file": {
                      "keyType": "Account",
                      "enabled": true
                    },
                    "blob": {
                      "keyType": "Account",
                      "enabled": true
                    }
                  },
                  "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
              }
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2019-09-01",
              "name": "[format('{0}/{1}Key', parameters('keyVaultName'), variables('storageAccountName'))]",
              "properties": {
                "value": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2019-06-01').keys[0].value]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
              ]
            }
          ],
          "outputs": {
            "storageAccount": {
              "type": "object",
              "value": {
                "name": "[variables('storageAccountName')]",
                "id": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
                "apiVersion": "2019-06-01"
              }
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'keyVaultDeployment')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "keyVaultDeployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "applicationName": {
            "value": "[parameters('applicationName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "objectId": {
            "value": "[parameters('objectId')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "applicationName": {
              "type": "string"
            },
            "objectId": {
              "type": "string"
            },
            "location": {
              "type": "string"
            }
          },
          "functions": [],
          "variables": {
            "secretsAllowArray": [
              "get",
              "set",
              "list",
              "delete"
            ]
          },
          "resources": [
            {
              "type": "Microsoft.KeyVault/vaults",
              "apiVersion": "2019-09-01",
              "name": "[format('kv-{0}', parameters('applicationName'))]",
              "location": "[parameters('location')]",
              "properties": {
                "tenantId": "[subscription().tenantId]",
                "sku": {
                  "name": "standard",
                  "family": "A"
                },
                "accessPolicies": [
                  {
                    "objectId": "[parameters('objectId')]",
                    "tenantId": "[subscription().tenantId]",
                    "permissions": {
                      "secrets": "[variables('secretsAllowArray')]"
                    }
                  }
                ]
              }
            }
          ],
          "outputs": {
            "keyVaultName": {
              "type": "string",
              "value": "[format('kv-{0}', parameters('applicationName'))]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "functionAppDeployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "applicationName": {
            "value": "[parameters('applicationName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "appInsightsInstrumentationKey": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'appInsightsDeployment'), '2019-10-01').outputs.appInsightsInstrumentationKey.value]"
          },
          "keyVaultName": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'keyVaultDeployment'), '2019-10-01').outputs.keyVaultName.value]"
          },
          "storageAccount": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'storageAccountDeployment'), '2019-10-01').outputs.storageAccount.value]"
          },
          "planId": {
            "value": "[reference(resourceId('Microsoft.Resources/deployments', 'planDeployment'), '2019-10-01').outputs.planId.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "applicationName": {
              "type": "string"
            },
            "keyVaultName": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "storageAccount": {
              "type": "object"
            },
            "appInsightsInstrumentationKey": {
              "type": "string"
            },
            "planId": {
              "type": "string"
            }
          },
          "functions": [],
          "resources": [
            {
              "type": "Microsoft.Web/sites",
              "apiVersion": "2020-06-01",
              "name": "[format('func-{0}', parameters('applicationName'))]",
              "location": "[parameters('location')]",
              "kind": "functionapp",
              "properties": {
                "serverFarmId": "[parameters('planId')]",
                "siteConfig": {
                  "appSettings": [
                    {
                      "name": "AzureWebJobsStorage",
                      "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', parameters('storageAccount').name, environment().suffixes.storage, listKeys(parameters('storageAccount').id, parameters('storageAccount').apiVersion).keys[0].value)]"
                    },
                    {
                      "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                      "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', parameters('storageAccount').name, environment().suffixes.storage, listKeys(parameters('storageAccount').id, parameters('storageAccount').apiVersion).keys[0].value)]"
                    },
                    {
                      "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                      "value": "[parameters('appInsightsInstrumentationKey')]"
                    },
                    {
                      "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
                      "value": "[format('InstrumentationKey={0}', parameters('appInsightsInstrumentationKey'))]"
                    },
                    {
                      "name": "FUNCTIONS_WORKER_RUNTIME",
                      "value": "dotnet"
                    },
                    {
                      "name": "FUNCTIONS_EXTENSION_VERSION",
                      "value": "~3"
                    }
                  ]
                },
                "httpsOnly": true
              }
            },
            {
              "type": "Microsoft.KeyVault/vaults/secrets",
              "apiVersion": "2018-02-14",
              "name": "[format('{0}/FunctionAppHostKey', parameters('keyVaultName'))]",
              "properties": {
                "value": "[listKeys(format('{0}/host/default', resourceId('Microsoft.Web/sites', format('func-{0}', parameters('applicationName')))), '2020-06-01').functionKeys.default]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', format('func-{0}', parameters('applicationName')))]"
              ]
            }
          ],
          "outputs": {
            "functionAppHostName": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Web/sites', format('func-{0}', parameters('applicationName')))).defaultHostName]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', 'appInsightsDeployment')]",
        "[resourceId('Microsoft.Resources/deployments', 'planDeployment')]",
        "[resourceId('Microsoft.Resources/deployments', 'keyVaultDeployment')]",
        "[resourceId('Microsoft.Resources/deployments', 'storageAccountDeployment')]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "planDeployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "applicationName": {
            "value": "[parameters('applicationName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "applicationName": {
              "type": "string"
            },
            "location": {
              "type": "string"
            }
          },
          "functions": [],
          "resources": [
            {
              "type": "Microsoft.Web/serverfarms",
              "apiVersion": "2020-06-01",
              "name": "[format('plan-{0}', parameters('applicationName'))]",
              "location": "[parameters('location')]",
              "kind": "functionapp",
              "sku": {
                "name": "Y1"
              }
            }
          ],
          "outputs": {
            "planId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Web/serverfarms', format('plan-{0}', parameters('applicationName')))]"
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "appInsightsDeployment",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "applicationName": {
            "value": "[parameters('applicationName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "applicationName": {
              "type": "string"
            },
            "location": {
              "type": "string"
            }
          },
          "functions": [],
          "resources": [
            {
              "type": "Microsoft.Insights/components",
              "apiVersion": "2018-05-01-preview",
              "name": "[format('plan-{0}', parameters('applicationName'))]",
              "location": "[parameters('location')]",
              "kind": "web",
              "properties": {
                "Application_Type": "web"
              }
            }
          ],
          "outputs": {
            "appInsightsInstrumentationKey": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Insights/components', format('plan-{0}', parameters('applicationName')))).InstrumentationKey]"
            }
          }
        }
      }
    }
  ],
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.3.1.62928",
      "templateHash": "13305270302817536435"
    }
  }
}